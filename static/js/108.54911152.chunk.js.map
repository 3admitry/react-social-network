{"version":3,"file":"static/js/108.54911152.chunk.js","mappings":"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","sources":["webpack://samurai/./src/components/Profile/MyPosts/MyPosts.module.scss?39b9","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","webpack://samurai/./src/components/Profile/ProfileInfo/ProfileInfo.module.scss?e49f","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.module.scss","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"myPost\":\"MyPosts_myPost__wJm1b\",\"formItemContainer\":\"MyPosts_formItemContainer__F-+yZ\",\"formItemContainerTextArea\":\"MyPosts_formItemContainerTextArea__1zZGz\",\"formSubmitButton\":\"MyPosts_formSubmitButton__oYf-O\"};","import React from \"react\";\r\nimport {Controller, useForm} from \"react-hook-form\";\r\nimport style from \"./MyPosts.module.scss\"\r\nimport {Avatar, Button, List, Space, Typography} from 'antd';\r\nimport TextArea from \"antd/es/input/TextArea\";\r\nimport avatar from './../../../assets/images/no-avatar.png'\r\nimport {LikeOutlined, MessageOutlined, StarOutlined} from \"@ant-design/icons\";\r\n\r\nconst {Title} = Typography;\r\nconst IconText = ({icon, text}) => (\r\n    <Space>\r\n        {React.createElement(icon)}\r\n        {text}\r\n    </Space>\r\n);\r\n\r\nexport const MyPosts = (props) => {\r\n\r\n    const {control, handleSubmit, formState: {errors}, reset} = useForm();\r\n\r\n    const onSubmit = (data) => {\r\n        props.addNewPost(data.post);\r\n        reset()\r\n    }\r\n\r\n    return (\r\n        <div className={style.myPost}>\r\n            <Title level={2}>My posts</Title>\r\n            <form id=\"post-form\" onSubmit={handleSubmit(onSubmit)} className={style.form}>\r\n                <div>\r\n                    <Controller\r\n                        name=\"post\"\r\n                        control={control}\r\n                        rules={{required: true}}\r\n                        render={({field}) => <>\r\n                            <label htmlFor=\"post\">What's news ?</label>\r\n                            <div className={style.formItemContainer}>\r\n                                <TextArea className={style.formItemContainerTextArea} rows={4}\r\n                                          placeholder=\"Type your post\" maxLength={250} {...field}/>\r\n                                {errors.post && <div style={{color: 'red'}}>This field is required</div>}\r\n                            </div>\r\n                        </>\r\n                        }\r\n                    />\r\n                </div>\r\n                <div className={style.formSubmitButton}>\r\n                    <Button type=\"primary\" htmlType=\"submit\">\r\n                        Submit\r\n                    </Button>\r\n                </div>\r\n            </form>\r\n            <div className={style.listOfPosts}>\r\n                <List\r\n                    itemLayout=\"vertical\"\r\n                    size=\"large\"\r\n                    dataSource={props.posts}\r\n                    renderItem={(item) => (\r\n                        <List.Item\r\n                            key={item.id}\r\n                            actions={[\r\n                                <IconText icon={StarOutlined} text={item.stars.toString()} key=\"list-vertical-star-o\"/>,\r\n                                <IconText icon={LikeOutlined} text={item.likeCount.toString()}\r\n                                          key=\"list-vertical-like-o\"/>,\r\n                                <IconText icon={MessageOutlined} text={item.comments.toString()}\r\n                                          key=\"list-vertical-message\"/>,\r\n                            ]}\r\n                        >\r\n                            <List.Item.Meta\r\n                                avatar={<Avatar src={avatar}/>}\r\n                                title={props.profile?.fullName}\r\n                            />\r\n                            {item.message}\r\n                        </List.Item>\r\n                    )}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from \"react\";\r\nimport {addPostAC} from \"../../../redux/profileReducer\";\r\nimport {MyPosts} from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass MyPostsContainer extends React.Component {\r\n\r\n    render() {\r\n        return <MyPosts {...this.props} />\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        newPostText: state.profilePage.newPostText,\r\n        posts: state.profilePage.posts,\r\n        auth: state.auth\r\n    }\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addNewPost: (newPostText) => {\r\n            dispatch(addPostAC(newPostText));\r\n        }\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MyPostsContainer);","// extracted by mini-css-extract-plugin\nexport default {\"profile\":\"ProfileInfo_profile__V61uv\",\"mainProfile\":\"ProfileInfo_mainProfile__eiTY7\",\"profileBackground\":\"ProfileInfo_profileBackground__yJqM-\",\"avatarStatus\":\"ProfileInfo_avatarStatus__kO33G\",\"avatarContainer\":\"ProfileInfo_avatarContainer__u5Rk+\",\"avatar\":\"ProfileInfo_avatar__8s4XS\",\"uploadAvatar\":\"ProfileInfo_uploadAvatar__h2+SF\",\"labelAvatar\":\"ProfileInfo_labelAvatar__48c9t\",\"editButton\":\"ProfileInfo_editButton__FHwrH\",\"submitButton\":\"ProfileInfo_submitButton__RAKuV\",\"status\":\"ProfileInfo_status__MKgAv\",\"statusTitle\":\"ProfileInfo_statusTitle__nJpjp\",\"statusText\":\"ProfileInfo_statusText__pYRbr\",\"fullName\":\"ProfileInfo_fullName__fSWAM\",\"infoProfile\":\"ProfileInfo_infoProfile__S4xbv\",\"ProfileData\":\"ProfileInfo_ProfileData__ymvo7\",\"profileItem\":\"ProfileInfo_profileItem__ApW63\",\"profileItemTitle\":\"ProfileInfo_profileItemTitle__g0xeA\",\"profileItemDesc\":\"ProfileInfo_profileItemDesc__iT8XQ\",\"profileDataForm\":\"ProfileInfo_profileDataForm__HNplQ\",\"formItem\":\"ProfileInfo_formItem__Urb1d\",\"formInput\":\"ProfileInfo_formInput__l7wZr\",\"alert\":\"ProfileInfo_alert__rq9+g\",\"initialize\":\"ProfileInfo_initialize__Xedpg\"};","import React from 'react';\r\nimport style from \"./ProfileInfo.module.scss\"\r\nimport {EditOutlined} from \"@ant-design/icons\";\r\n\r\nclass ProfileStatus extends React.Component {\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.status !== this.props.status) {\r\n            this.setState({\r\n                status: this.props.status\r\n            })\r\n        }\r\n    }\r\n    activateEditMode = () => {\r\n        this.setState({\r\n            editMode: true\r\n        })\r\n    }\r\n    deActivateEditMode = () => {\r\n        this.setState({\r\n            editMode: false\r\n        })\r\n        this.props.updateStatus(this.state.status);\r\n    }\r\n    changeInputHandler = (newStatus) => {\r\n        this.setState({\r\n            status: newStatus\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className={style.statusTitle}>My status:</div>\r\n                {!this.state.editMode &&\r\n                    <div className={style.statusText}>\r\n                            <mark\r\n                                onClick={this.props.isOwner ? this.activateEditMode : (() => {\r\n                                })}>{this.state.status ? this.state.status : 'Set your status'}\r\n                            </mark>\r\n                        {this.props.isOwner &&\r\n                            <EditOutlined onClick={this.props.isOwner ? this.activateEditMode : (() => {\r\n                            })}/>\r\n                        }\r\n                    </div>\r\n                }\r\n                {this.state.editMode && this.props.isOwner &&\r\n                    <div>\r\n                        <input onChange={(e) => this.changeInputHandler(e.currentTarget.value)}\r\n                               onBlur={this.deActivateEditMode} type=\"text\" value={this.state.status} autoFocus/>\r\n                    </div>\r\n                }\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProfileStatus;","import React from \"react\";\r\nimport {Controller, useForm} from \"react-hook-form\";\r\nimport style from \"./ProfileInfo.module.scss\"\r\nimport {Alert, Checkbox, Input} from \"antd\";\r\n\r\nexport const ProfileDataForm = ({profile, submitProfileForm, errorMessage}) => {\r\n    const {control, handleSubmit, formState: {errors}} = useForm({\r\n        defaultValues: {\r\n            fullName: profile.fullName,\r\n            aboutMe: profile.aboutMe,\r\n            lookingForAJob: profile.lookingForAJob,\r\n            lookingForAJobDescription: profile.lookingForAJobDescription,\r\n            contacts: {...profile.contacts}\r\n        }\r\n    });\r\n    return <div className={style.profileDataForm}>\r\n        {errorMessage &&\r\n            <Alert\r\n                message={errorMessage}\r\n                type=\"error\"\r\n                closable\r\n                className={style.alert}\r\n            />\r\n        }\r\n        <form id=\"profile-form\" onSubmit={handleSubmit(submitProfileForm)}>\r\n            <div className={style.formItem}>\r\n                <Controller\r\n                    name=\"fullName\"\r\n                    control={control}\r\n                    rules={{required: true}}\r\n                    render={({field}) => <>\r\n                        <label htmlFor=\"fullName\">Full name</label>\r\n                        <div className={style.formInput}>\r\n                            <Input status={errors.fullName && 'error'} type={'text'}\r\n                                   placeholder={'Full Name'} {...field} />\r\n                            {errors.fullName && <div style={{color: 'red'}}>This field is required</div>}\r\n                        </div>\r\n                    </>\r\n                    }\r\n                />\r\n            </div>\r\n            <div className={style.formItem}>\r\n                <Controller\r\n                    name=\"aboutMe\"\r\n                    control={control}\r\n                    rules={{required: true}}\r\n                    render={({field}) => <>\r\n                        <label htmlFor=\"aboutMe\">About me</label>\r\n                        <div className={style.formInput}>\r\n                            <Input status={errors.aboutMe && 'error'} type={'text'}\r\n                                   placeholder={'About me'} {...field} />\r\n                            {errors.aboutMe && <div style={{color: 'red'}}>This field is required</div>}\r\n                        </div>\r\n                    </>\r\n                    }\r\n                />\r\n            </div>\r\n            <div className={style.formItem}>\r\n                <Controller\r\n                    name=\"lookingForAJob\"\r\n                    control={control}\r\n                    render={({field: {onChange, onBlur, value, name, ref}}) => <>\r\n                        <label htmlFor=\"lookingForAJob\">Looking for a job</label>\r\n                        <div className={style.formInput}>\r\n                            <Checkbox checked={value} onChange={onChange} onBlur={onBlur} inputRef={ref} name={name}/>\r\n                        </div>\r\n                    </>\r\n                    }\r\n                />\r\n            </div>\r\n\r\n            <div className={style.formItem}>\r\n                <Controller\r\n                    name=\"lookingForAJobDescription\"\r\n                    control={control}\r\n                    rules={{required: true}}\r\n                    render={({field}) => <>\r\n                        <label htmlFor=\"lookingForAJobDescription\">Looking for a job description</label>\r\n                        <div className={style.formInput}>\r\n                            <Input status={errors.lookingForAJobDescription && 'error'} type={'text'}\r\n                                   placeholder={'Looking for a job description'} {...field} />\r\n                            {errors.lookingForAJobDescription &&\r\n                                <div style={{color: 'red'}}>This field is required</div>}\r\n                        </div>\r\n                    </>\r\n                    }\r\n                />\r\n            </div>\r\n\r\n            <div>\r\n                {\r\n                    Object.keys(profile.contacts).map((contact, index) => {\r\n                        return (\r\n                            <div key={index} className={style.formItem}>\r\n                                <Controller\r\n                                    name={`contacts[${contact}]`}\r\n                                    control={control}\r\n                                    rules={{required: true}}\r\n                                    render={({field}) => <>\r\n                                        <label htmlFor={`contacts[${contact}]`}>{contact}</label>\r\n                                        <div className={style.formInput}>\r\n                                            <Input\r\n                                                status={errors[`contacts`] && errors[`contacts`][`${contact}`] && 'error'}\r\n                                                type={'text'} placeholder={contact} {...field} />\r\n                                            {errors[`contacts`] && errors[`contacts`][`${contact}`] &&\r\n                                                <div style={{color: 'red'}}>This field is required</div>}\r\n                                        </div>\r\n                                    </>\r\n                                    }\r\n                                />\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        </form>\r\n    </div>\r\n}","import React, {useState} from \"react\";\r\nimport style from \"./ProfileInfo.module.scss\"\r\nimport {Badge, Button, Divider, Spin} from \"antd\";\r\nimport ProfileStatus from \"./ProfileStatus\"\r\nimport defaultUserPhoto from \"../../../assets/images/user.jpg\";\r\nimport {ProfileDataForm} from \"./ProfileDataForm\";\r\nimport {Typography} from 'antd';\r\nimport {CameraOutlined, EditOutlined} from \"@ant-design/icons\";\r\n\r\nconst {Title} = Typography;\r\n\r\nexport const ProfileInfo = ({profile, status, updateStatus, isOwner, savePhoto, saveProfile, errorMessage}) => {\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n\r\n    if (!profile) return <div className={style.initialize}><Spin size=\"large\"/></div>\r\n\r\n    const handlerAvatarChange = (e) => savePhoto(e.target.files[0])\r\n    const switchEditMode = () => setEditMode(!editMode)\r\n    const submitProfileForm = (data) => {\r\n        saveProfile(data).then(() => {\r\n            switchEditMode()\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={style.profile}>\r\n                <div className={style.mainProfile}>\r\n                    <div className={style.profileBackground}></div>\r\n                    <div className={style.avatarStatus}>\r\n                        <div className={style.avatarContainer}>\r\n                            <div className={style.avatar}>\r\n                                <img src={profile.photos.large || defaultUserPhoto} alt=\"\"/>\r\n                                {isOwner &&\r\n                                    <>\r\n                                        <label htmlFor=\"upload-photo\" className={style.labelAvatar}>\r\n                                            <CameraOutlined/>\r\n                                            <input type=\"file\" id='upload-photo' style={{display: 'none'}}\r\n                                                   onChange={handlerAvatarChange}/>\r\n                                        </label>\r\n                                    </>\r\n                                }\r\n                            </div>\r\n                            <div className={style.editButton}>\r\n                                {(isOwner && !editMode)\r\n                                    ? <div>\r\n                                        <Button onClick={switchEditMode} icon={<EditOutlined/>}>\r\n                                            Edit profile\r\n                                        </Button>\r\n                                    </div>\r\n                                    : <div>\r\n                                        <input className={style.submitButton} form=\"profile-form\" type=\"submit\"\r\n                                               value={'Save'}/>\r\n                                    </div>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                        <div className={style.fullName}>\r\n                            {profile.fullName}\r\n                        </div>\r\n                        <div className={style.status}>\r\n                            <ProfileStatus status={status} updateStatus={updateStatus} isOwner={isOwner}/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className={style.infoProfile}>\r\n                    <Divider orientation=\"left\" orientationMargin={0}>\r\n                        <Title level={3}>User information</Title>\r\n                    </Divider>\r\n\r\n                    {\r\n                        editMode\r\n                            ? <ProfileDataForm profile={profile} switchEditMode={switchEditMode}\r\n                                               submitProfileForm={submitProfileForm}\r\n                                               errorMessage={errorMessage}/>\r\n                            : <ProfileData profile={profile} isOwner={isOwner} switchEditMode={switchEditMode}/>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nconst ProfileData = ({profile}) => {\r\n    return (\r\n        <div className={style.ProfileData}>\r\n            <div className={style.profileItem}>\r\n                <div className={style.profileItemTitle}>Full name</div>\r\n                <div className={style.profileItemDesc}>{profile.fullName}</div>\r\n            </div>\r\n            <div className={style.profileItem}>\r\n                <div className={style.profileItemTitle}>About me</div>\r\n                <div className={style.profileItemDesc}>{(profile.aboutMe || '—')}</div>\r\n            </div>\r\n            <div className={style.profileItem}>\r\n                <div className={style.profileItemTitle}>Looking for a job</div>\r\n                <div className={style.profileItemDesc}>{profile.lookingForAJob\r\n                    ? <Badge status=\"success\"/>\r\n                    : <Badge status=\"error\"/>}\r\n                </div>\r\n            </div>\r\n            <div className={style.profileItem}>\r\n                <div className={style.profileItemTitle}>Description</div>\r\n                <div className={style.profileItemDesc}>{profile.lookingForAJobDescription}</div>\r\n            </div>\r\n            {\r\n                Object.keys(profile.contacts).map((contact, index) => {\r\n                    return (\r\n                        <div key={index} className={style.profileItem}>\r\n                            <div className={style.profileItemTitle}>{contact}</div>\r\n                            <div className={style.profileItemDesc}>{(profile.contacts[contact] || '—')}</div>\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {};","import React from 'react';\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport {ProfileInfo} from \"./ProfileInfo/ProfileInfo\";\r\nimport style from './Profile.module.scss'\r\n\r\nconst Profile = ({userProfile, profileStatus, updateProfileStatus, isOwner, savePhoto, saveProfile, errorMessage}) => {\r\n    return (\r\n        <div className={style.profile}>\r\n            <ProfileInfo\r\n                savePhoto={savePhoto}\r\n                isOwner={isOwner}\r\n                profile={userProfile}\r\n                status={profileStatus}\r\n                updateStatus={updateProfileStatus}\r\n                saveProfile={saveProfile}\r\n                errorMessage={errorMessage}\r\n            />\r\n            <MyPostsContainer profile={userProfile}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport {getProfileStatus, getUser, savePhoto, saveProfile, updateProfileStatus} from \"../../redux/profileReducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {withRouter} from \"../../hoc/withRouter-hoc\";\r\nimport Profile from \"./Profile\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.router.params.userId;\r\n        if (!userId && this.props.isAuth) {\r\n            userId = this.props.authorizedUserId;\r\n        }\r\n        this.props.getUser(userId);\r\n        this.props.getProfileStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile()\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if ((this.props.router.params.userId !== prevProps.router.params.userId)) {\r\n            this.refreshProfile()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <><Profile savePhoto={this.savePhoto} isOwner={!this.props.router.params.userId} {...this.props} /></>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        userProfile: state.profilePage.userProfile,\r\n        profileStatus: state.profilePage.status,\r\n        authorizedUserId: state.auth.id,\r\n        isAuth: state.auth.isAuth,\r\n        errorMessage: state.auth.errorMessage\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    withAuthRedirect,\r\n    connect(mapStateToProps, {getUser, getProfileStatus, updateProfileStatus, savePhoto, saveProfile}),\r\n    withRouter,\r\n)(ProfileContainer);"],"names":["Title","Typography","IconText","icon","text","React","MyPosts","props","useForm","control","handleSubmit","errors","formState","reset","className","style","level","id","onSubmit","data","addNewPost","post","name","rules","required","render","field","htmlFor","TextArea","rows","placeholder","maxLength","color","type","htmlType","itemLayout","size","dataSource","posts","renderItem","item","actions","StarOutlined","stars","toString","LikeOutlined","likeCount","MessageOutlined","comments","avatar","src","title","profile","fullName","message","MyPostsContainer","this","connect","state","newPostText","profilePage","auth","dispatch","addPostAC","ProfileStatus","editMode","status","activateEditMode","setState","deActivateEditMode","updateStatus","changeInputHandler","newStatus","prevProps","prevState","snapshot","onClick","isOwner","EditOutlined","onChange","e","currentTarget","value","onBlur","autoFocus","ProfileDataForm","submitProfileForm","errorMessage","defaultValues","aboutMe","lookingForAJob","lookingForAJobDescription","contacts","closable","ref","checked","inputRef","Object","keys","map","contact","index","ProfileInfo","savePhoto","saveProfile","useState","setEditMode","switchEditMode","photos","large","defaultUserPhoto","alt","CameraOutlined","display","target","files","form","orientation","orientationMargin","then","ProfileData","userProfile","profileStatus","updateProfileStatus","ProfileContainer","userId","router","params","isAuth","authorizedUserId","getUser","getProfileStatus","refreshProfile","compose","withAuthRedirect","withRouter"],"sourceRoot":""}